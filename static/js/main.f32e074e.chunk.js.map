{"version":3,"sources":["components/FormContacts/FormContacts.module.css","components/ContactsList/ContactsList.module.css","components/FilterContacts/FilterContacts.module.css","components/App/App.module.css","components/FormContacts/FormContacts.js","components/Contact/Contact.js","components/ContactsList/ContactsList.js","components/FilterContacts/FilterContacts.js","components/App/App.js","index.js","components/Contact/Contact.module.css"],"names":["module","exports","FormContacts","state","name","number","handleChangeName","e","setState","target","value","handleChangeNumber","reset","handleSubmit","preventDefault","props","contacts","find","contact","alert","newContact","id","shortid","generate","addNewContact","this","onSubmit","className","styles","contacts__form","htmlFor","contacts__label","type","onChange","contacts__input","contacts__button","Component","Contact","handleDeleteContact","item__name","onClick","item__button","ContactsList","contacts__list","map","key","list__items","FilterContacts","filter","handleFilter","placeholder","contacts__filter","App","filteredContacts","localContacts","JSON","parse","localStorage","getItem","err","console","log","prevProps","prevState","setItem","stringify","filtredContacts","toLowerCase","includes","filterContacts","main_wrapper","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f32e074e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts__form\":\"FormContacts_contacts__form__X1OGl\",\"contacts__label\":\"FormContacts_contacts__label__3O6Bm\",\"contacts__input\":\"FormContacts_contacts__input__25MPB\",\"contacts__button\":\"FormContacts_contacts__button__9lCn0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts__list\":\"ContactsList_contacts__list__1eEY2\",\"list__items\":\"ContactsList_list__items__c5lV7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts__filter\":\"FilterContacts_contacts__filter__3aQqR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_wrapper\":\"App_main_wrapper__iqs62\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\n\nimport styles from './FormContacts.module.css';\n\nexport default class FormContacts extends Component {\n  static propTypes = {\n    addNewContact: PropTypes.func.isRequired,\n    contacts: PropTypes.arrayOf(PropTypes.shape().isRequired).isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChangeName = e => {\n    this.setState({ name: e.target.value });\n  };\n\n  handleChangeNumber = e => {\n    this.setState({ number: e.target.value });\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    if (!this.state.name || !this.state.number) return;\n\n    const sameContact = this.props.contacts.find(\n      contact => contact.name === this.state.name,\n    );\n    if (sameContact) {\n      alert(`Contact ${this.state.name} is already exists in your phonebook!`);\n      return;\n    }\n\n    const newContact = {\n      name: this.state.name,\n      number: this.state.number,\n      id: shortid.generate(),\n    };\n\n    this.props.addNewContact(newContact);\n    this.reset();\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.contacts__form}>\n        <label htmlFor={shortid.generate()} className={styles.contacts__label}>\n          Name\n          <input\n            type=\"text\"\n            value={name}\n            onChange={this.handleChangeName}\n            className={styles.contacts__input}\n          />\n        </label>\n        <label htmlFor={shortid.generate()} className={styles.contacts__label}>\n          Number\n          <input\n            type=\"tel\"\n            value={number}\n            onChange={this.handleChangeNumber}\n            className={styles.contacts__input}\n          />\n        </label>\n        <button type=\"submit\" className={styles.contacts__button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Contact.module.css';\n\nconst Contact = ({ name, number, handleDeleteContact }) => (\n  <>\n    <span className={styles.item__name}>\n      {name} {number}\n    </span>\n    <button\n      type=\"button\"\n      onClick={handleDeleteContact}\n      className={styles.item__button}\n    >\n      Delete\n    </button>\n  </>\n);\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  handleDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default Contact;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Contact from '../Contact/Contact';\n\nimport styles from './ContactsList.module.css';\n\nconst ContactsList = ({ contacts, handleDeleteContact }) => (\n  <ul className={styles.contacts__list}>\n    {contacts.map(contact => (\n      <li key={contact.id} className={styles.list__items}>\n        <Contact\n          name={contact.name}\n          number={contact.number}\n          handleDeleteContact={() => handleDeleteContact(contact.id)}\n        />\n      </li>\n    ))}\n  </ul>\n);\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape().isRequired).isRequired,\n  handleDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './FilterContacts.module.css';\n\nconst FilterContacts = ({ filter, handleFilter }) => (\n  <input\n    type=\"text\"\n    value={filter}\n    onChange={handleFilter}\n    placeholder=\"Filter...\"\n    className={styles.contacts__filter}\n  />\n);\n\nFilterContacts.propTypes = {\n  filter: PropTypes.string.isRequired,\n  handleFilter: PropTypes.func.isRequired,\n};\nexport default FilterContacts;\n","import React, { Component } from 'react';\n\nimport FormContacts from '../FormContacts/FormContacts';\nimport ContactsList from '../ContactsList/ContactsList';\nimport FilterContacts from '../FilterContacts/FilterContacts';\n\nimport styles from './App.module.css';\n\nconst filterContacts = (contacts, filter) => {\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\n  );\n};\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    try {\n      const localContacts = JSON.parse(localStorage.getItem('contacts'));\n      if (localContacts) {\n        this.setState({ contacts: localContacts });\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (prevState.contacts !== contacts) {\n      try {\n        localStorage.setItem('contacts', JSON.stringify(contacts));\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n\n  addNewContact = newContact => {\n    this.setState(state => ({ contacts: [...state.contacts, newContact] }));\n  };\n\n  handleFilter = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  handleDeleteContact = id => {\n    const { contacts } = this.state;\n    const filteredContacts = contacts.filter(contact => contact.id !== id);\n\n    this.setState({ contacts: filteredContacts });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    const filtredContacts = filterContacts(contacts, filter);\n    return (\n      <div className={styles.main_wrapper}>\n        <h1>Phonebook</h1>\n        <FormContacts addNewContact={this.addNewContact} contacts={contacts} />\n        <h2>Contacts</h2>\n        <FilterContacts filter={filter} handleFilter={this.handleFilter} />\n        <ContactsList\n          contacts={filtredContacts}\n          handleDeleteContact={this.handleDeleteContact}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\n\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item__button\":\"Contact_item__button__2VPFI\"};"],"sourceRoot":""}